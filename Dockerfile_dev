################ Build & Dev ################
# Build stage will be used:
# - for building the application for production
# - as target for development (see devspace.yaml)
FROM golang:1.17.3-alpine as builder

ENV GOPROXY="https://goproxy.cn,direct"

# Create project directory (workdir)
WORKDIR /app

# Add source code files to WORKDIR
ADD . .

# Build application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags "-static"' -o main .

################ Production ################
# Creates a minimal image for production using distroless base image
# More info here: https://github.com/GoogleContainerTools/distroless
# FROM tuxmake/base-debian10:20211119 as production

# Copy application binary from build/dev stage to the distroless container
# COPY --from=build /app/main /

# Application port (optional)
EXPOSE 12306

# Container start command for production
# CMD ["/main"]

# Container start command for development
# Allows DevSpace to restart the dev container
# It is also possible to override this in devspace.yaml via images.*.cmd
CMD ["go", "run", "main.go"]